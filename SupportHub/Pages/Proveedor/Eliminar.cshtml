@page
@using System.Data.SqlClient;
@{
    Layout = "_Layout";
    try
    {
        // Obtener el ID del proveedor como string y convertirlo a entero
        string codProveedor = Request.Query["id"];
        int idProveedorNum = int.Parse(codProveedor); // Asegúrate de que esto sea un entero

        string cadena = "Server = localhost ; DataBase = SupportHub ; Integrated Security = True";

        // Crear conexión SQL
        using (SqlConnection conexion = new SqlConnection(cadena))
        {
            conexion.Open();

            // Llamar al procedimiento almacenado
            using (SqlCommand comando = new SqlCommand("sp_eliminar_proveedor", conexion))
            {
                comando.CommandType = System.Data.CommandType.StoredProcedure;

                comando.Parameters.AddWithValue("@idProveedor", idProveedorNum);
                comando.ExecuteNonQuery();
            }
        }
        <div class="d-flex justify-content-center mt-5">
        <form>
            <div class='alert alert-success alert-dismissible fade show' role='alert'>
                <strong> Proveedor eliminado exitosamente</strong>
            </div>
        </form>
         </div>
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
    }
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.alert-success').show();
         
            // Mantener el mensaje durante 3 segundos y luego redirigir
            setTimeout(function () {
                window.location.href = '/Proveedor/mostrarProveedor';  // Redirigir a la página de proveedores
            }, 1000);  // 3 segundos de espera antes de redirigir
        });
    </script>
}
